import{_ as n,c as a,a as e,o as t}from"./app-C2KqPoQf.js";const p={};function o(c,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h2 id="mock" tabindex="-1"><a class="header-anchor" href="#mock"><span>Mock</span></a></h2><p>平台配置了Mock的方法，可以方便的进行前后端分离开发。并可以通过环境变量来控制是否开启Mock</p><details class="hint-container details"><summary>点击查看</summary><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// .env.development</span></span>
<span class="line"><span class="token constant">VITE_USE_MOCK</span><span class="token operator">=</span><span class="token boolean">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></details><p>Mock请求的方法</p><details class="hint-container details"><summary><code>Get</code>方法</summary><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">&#39;/api/auth/info&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>options<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">        code<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span></span>
<span class="line">        message<span class="token operator">:</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        data<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            name<span class="token operator">:</span> <span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary><code>Post</code>方法</summary><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">&#39;/api/auth/login&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>options<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">        code<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span></span>
<span class="line">        message<span class="token operator">:</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        data<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            token<span class="token operator">:</span> <span class="token string">&#39;1234567890&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="请求设置" tabindex="-1"><a class="header-anchor" href="#请求设置"><span>请求设置</span></a></h2><p>平台分别封装了<code>Axios</code>、<code>Fetch</code>、<code>WebSocket</code>三种请求方式，并内置了丰富的功能。默认采用<code>Axios</code>请求。</p><h3 id="axios和fetch" tabindex="-1"><a class="header-anchor" href="#axios和fetch"><span>Axios和Fetch</span></a></h3><ul><li>支持<code>Get</code>、<code>Post</code>、<code>Put</code>、<code>Delete</code>四种请求方式</li><li>支持<code>FormData</code>、<code>Json</code>、<code>Urlencoded</code>三种请求格式</li><li>支持<code>拦截器</code>、<code>超时</code>、<code>取消请求</code>、<code>请求重试</code>等功能的设置</li><li>支持<code>响应拦截</code>、<code>错误重定向</code>、<code>错误信息提示</code>等功能</li><li>支持 <code>axios</code>和<code>fetch</code>下载进度监控和并发请求</li><li>支持 <code>fetch</code> 上传进度监控</li><li>支持 <code>fetch</code> 流式传输</li></ul><details class="hint-container details"><summary><code>Get</code>方法</summary><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">    <span class="token keyword">const</span> api <span class="token operator">=</span> type <span class="token operator">===</span> <span class="token string">&#39;axios&#39;</span> <span class="token operator">?</span> axiosRequest <span class="token operator">:</span> fetchRequest<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> api<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/api/test&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        params<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            name<span class="token operator">:</span> <span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary><code>Post</code>方法</summary><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">    <span class="token keyword">const</span> api <span class="token operator">=</span> type <span class="token operator">===</span> <span class="token string">&#39;axios&#39;</span> <span class="token operator">?</span> axiosRequest <span class="token operator">:</span> fetchRequest<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> api<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/test&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        data<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            name<span class="token operator">:</span> <span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary><code>Put</code>方法</summary><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">    <span class="token keyword">const</span> api <span class="token operator">=</span> type <span class="token operator">===</span> <span class="token string">&#39;axios&#39;</span> <span class="token operator">?</span> axiosRequest <span class="token operator">:</span> fetchRequest<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> api<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;/api/test&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        data<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            name<span class="token operator">:</span> <span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary><code>Delete</code>方法</summary><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">    <span class="token keyword">const</span> api <span class="token operator">=</span> type <span class="token operator">===</span> <span class="token string">&#39;axios&#39;</span> <span class="token operator">?</span> axiosRequest <span class="token operator">:</span> fetchRequest<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> api<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;/api/test&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        params<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            name<span class="token operator">:</span> <span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary><code>请求重试</code>方法</summary><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">    <span class="token keyword">const</span> api <span class="token operator">=</span> type <span class="token operator">===</span> <span class="token string">&#39;axios&#39;</span> <span class="token operator">?</span> axiosRequest <span class="token operator">:</span> fetchRequest<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> api<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/api/test-retry&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    retry<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">    retryDelay<span class="token operator">:</span> <span class="token number">1000</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary><code>上传</code>方法</summary><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">    <span class="token keyword">const</span> api <span class="token operator">=</span> type <span class="token operator">===</span> <span class="token string">&#39;axios&#39;</span> <span class="token operator">?</span> axiosRequest <span class="token operator">:</span> fetchRequest<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> api<span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span><span class="token string">&#39;/api/upload&#39;</span><span class="token punctuation">,</span> formData<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function-variable function">onUploadProgress</span><span class="token operator">:</span> <span class="token punctuation">(</span>progress<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">const</span> percent <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>progress <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>progress <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">              message<span class="token punctuation">.</span><span class="token function">loading</span><span class="token punctuation">(</span><span class="token punctuation">{</span> content<span class="token operator">:</span> <span class="token string">&#39;准备上传...&#39;</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">&#39;Upload&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">              message<span class="token punctuation">.</span><span class="token function">loading</span><span class="token punctuation">(</span><span class="token punctuation">{</span> </span>
<span class="line">                content<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">上传进度 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>percent<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> </span>
<span class="line">                key<span class="token operator">:</span> <span class="token string">&#39;Upload&#39;</span> </span>
<span class="line">              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary><code>下载</code>方法</summary><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">    <span class="token keyword">const</span> api <span class="token operator">=</span> type <span class="token operator">===</span> <span class="token string">&#39;axios&#39;</span> <span class="token operator">?</span> axiosRequest <span class="token operator">:</span> fetchRequest<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> api<span class="token punctuation">.</span><span class="token function">download</span><span class="token punctuation">(</span><span class="token string">&#39;/api/download&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function-variable function">onDownloadProgress</span><span class="token operator">:</span> <span class="token punctuation">(</span>progress<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">const</span> percent <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>progress <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary><code>并发请求</code>方法</summary><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">    <span class="token keyword">const</span> api <span class="token operator">=</span> type <span class="token operator">===</span> <span class="token string">&#39;axios&#39;</span> <span class="token operator">?</span> axiosRequest <span class="token operator">:</span> fetchRequest<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> api<span class="token punctuation">.</span><span class="token function">allLimit</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">        api<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/api/test1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        api<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/api/test2&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary><code>流式传输</code>方法</summary><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">    <span class="token keyword">await</span> fetchRequest<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token string">&#39;/api/stream&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function-variable function">onMessage</span><span class="token operator">:</span> <span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="websocket" tabindex="-1"><a class="header-anchor" href="#websocket"><span>WebSocket</span></a></h3><ul><li>支持<code>心跳检测</code>、<code>断线重连</code>、<code>消息重发</code>等功能</li><li>支持<code>消息队列</code>、<code>消息过滤</code>、<code>消息缓存</code>等功能</li></ul>`,21)]))}const i=n(p,[["render",o],["__file","request.html.vue"]]),u=JSON.parse('{"path":"/docs/guide/request","title":"请求配置","lang":"zh-CN","frontmatter":{"title":"请求配置","article":false,"date":"2024-12-08T00:00:00.000Z","permalink":"/docs/guide/request"},"headers":[{"level":2,"title":"Mock","slug":"mock","link":"#mock","children":[]},{"level":2,"title":"请求设置","slug":"请求设置","link":"#请求设置","children":[{"level":3,"title":"Axios和Fetch","slug":"axios和fetch","link":"#axios和fetch","children":[]},{"level":3,"title":"WebSocket","slug":"websocket","link":"#websocket","children":[]}]}],"git":{"updatedTime":1733671290000,"contributors":[{"name":"yangcw","email":"yangcw@glodon.com","commits":1,"url":"https://github.com/yangcw"}]},"filePathRelative":"docs/guide/request.md"}');export{i as comp,u as data};
